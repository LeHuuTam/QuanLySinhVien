<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAWFhYAAAAAA1RUVBu7u7s4u7u7OLu7uzi7u7s4urq6OM/PzzP///8X////AAAA
        AAAAAAAAAAAAAAAAAAAWFhYAAAAADJ2dnSy9vb05u7u7OLu7uzi7u7s4u7u7OO7u7in///8G////AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABYWFgATExMnICAg80pKSvVKSkr1SkpK9UpKSvVJSUn6WVlZrP//
        /xD///8AAAAAAAAAAAAAAAAAAAAAABYWFgATExOVNzc3+0tLS/VKSkr1SkpK9UpKSvVKSkr2k5OTTP//
        /wT///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhYWABMTEykfHx//SUlJ/0lJSf9JSUn/SUlJ/0hI
        SP9YWFiz////EP///wAAAAAAAAAAAAAAAAAAAAAAFhYWABMTE5w2Njb/SkpK/0lJSf9JSUn/SUlJ/0lJ
        Sf+RkZFO////BP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFhYAExMTKR8fH/9JSUn/SUlJ/0lJ
        Sf9JSUn/SEhI/1hYWLP///8Q////AAAAAAAAAAAAAAAAAAAAAAAWFhYAExMTnDY2Nv9KSkr/SUlJ/0lJ
        Sf9JSUn/SUlJ/5GRkU7///8E////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYWFgATExMpHx8f/0lJ
        Sf9JSUn/SUlJ/0lJSf9ISEj/WFhYs////xD///8AAAAAAAAAAAAAAAAAAAAAABYWFgATExOcNjY2/0pK
        Sv9JSUn/SUlJ/0lJSf9JSUn/kZGRTv///wT///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhYWABMT
        EykfHx//SUlJ/0lJSf9JSUn/SUlJ/0hISP9YWFiz////EP///wAAAAAAAAAAAAAAAAAAAAAAFhYWABMT
        E5w2Njb/SkpK/0lJSf9JSUn/SUlJ/0lJSf+RkZFO////BP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAWFhYAExMTKR8fH/9JSUn/SUlJ/0lJSf9JSUn/SEhI/1hYWLP///8Q////AAAAAAAAAAAAAAAAAAAA
        AAAWFhYAExMTnDY2Nv9KSkr/SUlJ/0lJSf9JSUn/SUlJ/5GRkU7///8E////AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABYWFgATExMpHx8f/0lJSf9JSUn/SUlJ/0lJSf9ISEj/WFhYs////xD///8AAAAAAAAA
        AAAAAAAAAAAAABYWFgATExOcNjY2/0pKSv9JSUn/SUlJ/0lJSf9JSUn/kZGRTv///wT///8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAFhYWABMTEykfHx//SUlJ/0lJSf9JSUn/SUlJ/0hISP9YWFiz////EP//
        /wAAAAAAAAAAAAAAAAAAAAAAFRUVABISEpw2Njb/SkpK/0lJSf9JSUn/SUlJ/0lJSf+RkZFO////BP//
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFhYAExMTKR8fH/9JSUn/SUlJ/0lJSf9JSUn/SEhI/1ZW
        VrH///8P////Bf///wb///8G////Bv///wYAAAAAJiYmnjs7O/9KSkr/SUlJ/0lJSf9JSUn/SUlJ/5GR
        kU7///8E////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYWFgATExMpHx8f/0lJSf9JSUn/SUlJ/0lJ
        Sf9JSUn/UVFRy3h4eGl1dXVudXV1bnV1dW51dXVudXV1bnl5eWlTU1PHSUlJ/0lJSf9JSUn/SUlJ/0lJ
        Sf9JSUn/kZGRTv///wT///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhYWABMTEykfHx//SUlJ/0lJ
        Sf9JSUn/SUlJ/0lJSf9JSUn/SEhI/0hISP9ISEj/SEhI/0hISP9ISEj/SEhI/0lJSf9JSUn/SUlJ/0lJ
        Sf9JSUn/SUlJ/0lJSf+RkZFO////BP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFhYAExMTKR8f
        H/9JSUn/SUlJ/0lJSf9JSUn/SUlJ/0lJSf9JSUn/SUlJ/0lJSf9JSUn/SUlJ/0lJSf9JSUn/SUlJ/0lJ
        Sf9JSUn/SUlJ/0lJSf9JSUn/SUlJ/5GRkU7///8E////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQU
        FAAREREpHh4e/0lJSf9JSUn/SUlJ/0lJSf9JSUn/SUlJ/0lJSf9JSUn/SUlJ/0lJSf9JSUn/SUlJ/0lJ
        Sf9JSUn/SUlJ/0lJSf9JSUn/SUlJ/0lJSf9JSUn/kZGRTv///wT///8AAAAAAAAAAAAAAAAA////AP//
        /wL///8K////CE9PTzEyMjL/SUlJ/0lJSf9JSUn/SUlJ/0lJSf9JSUn/SUlJ/0lJSf9JSUn/SUlJ/0lJ
        Sf9JSUn/SUlJ/0lJSf9JSUn/SUlJ/0lJSf9JSUn/SUlJ/0lJSf+IiIhI////C////wr///8K////Df//
        /woZGRlKLS0th1NTU5BlZWWPXV1doktLS/9JSUn/SUlJ/0lJSf9JSUn/SUlJ/0lJSf9KSkr/S0tL/0pK
        Sv9KSkr/S0tL/0pKSv9KSkr/S0tL/0pKSv9JSUn/SUlJ/0lJSf9JSUn/SUlJ/1tbW6RjY2OPY2NjkGNj
        Y5Jra2thv7+/EhYWFlAXFxfSJiYm/kFBQf9JSUn/SUlJ/0lJSf9JSUn/SUlJ/0lJSf9JSUn/SUlJ/z4+
        Pv8tLS3/Ozs7/zw8PP8tLS3/Pj4+/zo6Ov8tLS3/QEBA/0pKSv9JSUn/SUlJ/0lJSf9JSUn/SEhI/0hI
        SP9ISEj+RkZG2kFBQVQ/Pz8GFhYWBRYWFkoXFxfSKCgo/kJCQv9JSUn/SUlJ/0lJSf9JSUn/SUlJ/0lJ
        Sf9RUVHVSkpKdw0NDbAtLS3PRkZGdA0NDb40NDTDPT09cw0NDcg1NTX/SkpK/0lJSf9JSUn/SUlJ/0lJ
        Sf9JSUn/SUlJ/0ZGRttERERUQ0NDBkNDQwAWFhYAFhYWBhUVFVEXFxfYKSkp/0NDQ/9JSUn/SUlJ/0lJ
        Sf9JSUn/SUlJ/1NTU63///8COTk5dUNDQ6AAAAAANzc3jklJSYkAAAAANjY2nkFBQf9KSkr/SUlJ/0lJ
        Sf9JSUn/SUlJ/0lJSf9HR0fhREREW0JCQghDQ0MAAAAAAAAAAAAWFhYAFhYWBxUVFVgXFxffKioq/0RE
        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
        Af/8AAP//AAH//wAD//8MB///Dg////8f/8=
</value>
  </data>
</root>